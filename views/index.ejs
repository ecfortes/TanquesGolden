<!DOCTYPE html>
<html>
   <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta name="language" content="pt-BR">
	  <meta http-equiv="refresh" content="60">
      <title>ALTECH</title>
      <link rel="icon" type="image/png" href="https://www.google.com/favicon.ico">
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
      <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
      <script type="text/javascript">

         dados = <%- JSON.stringify(summary) %>;
         result1 = <%- JSON.stringify(result1.rows) %>;
         let dataChart = [
           ["Data", "Brita", "Cimento", "Areia Ind.", "Areia Rio", "Granilha"],
           ...dados.map(obj => [
             obj.Data,
             obj.ArraySummary[0],
             obj.ArraySummary[1],
             obj.ArraySummary[2],
             obj.ArraySummary[3],
             obj.ArraySummary[4]
           ])
         ];
               google.charts.load('current', {'packages':['bar']});
               google.charts.setOnLoadCallback(drawChart);
               function drawChart() {
                 var data = google.visualization.arrayToDataTable(dataChart);
                 var options = {
                    chart: {
                        title: 'Consumo de Material'
                    },
                    bars: 'vertical',
                    vAxis: {format: 'decimal'}
                };
                 var chart = new google.charts.Bar(document.getElementById('columnchart_material'));
                 chart.draw(data, google.charts.Bar.convertOptions(options));
               }
      </script>
   </head>
   <style>
      .dark-theme {
      background-color: #333;
      color: #fff;
      }
      .dark-theme table {
      background-color: #555;
      color: #fff;
      }
      .bt-selected{
      background: black;
      }
   </style>
   <body>
      <div class="container">
         <h1><i class="fa-regular fa-g fa-bounce" style="color: #2664cf;"></i></i>ermana</h1>
         

      </div>
      <div class="container-fluid">
         <div class="container d-none">
            <a href="#"><i class="fa fa-home"></i></a>
            <a href="#"><i class="fa fa-search"></i></a>
            <a href="#"><i class="fa fa-envelope"></i></a>
            <a href="#"><i class="fa fa-globe"></i></a>
         </div>
         <div class="container">
            <div class="d-flex align-items-center">
               <div class="btn-group me-3">
                  <a class="bt btn btn-primary" href="/1" role="button">Misturador 1</a>
                  <!-- <a class="bt btn btn-primary" href="/2" role="button">Misturador 2</a>
                  <a class="bt btn btn-primary" href="/3" role="button">Misturador 3</a> -->
               </div>
               <form id="my-form" class="d-flex">
                  <label for="data-inicial" class="me-2">Data Inicial:</label>
                  <input type="date" class="form-control me-2" id="data-inicial" name="data_inicial">
                  <label for="data-final" class="me-2">Data Final:</label>
                  <input type="date" class="form-control me-2" id="data-final" name="data_final">
                  <button type="submit" class="btn btn-primary">Filtrar</button>
               </form>
               <form action="/" method="get" class="ms-auto">
                  <button type="submit" class="btn btn-secondary" id="limpar-filtros">Limpar Filtros</button>
               </form>
            </div>
         </div>
		 
		 
		 <div class="container d-none">
         <div class="row">
            <div class="col-3 border rounded mr-4">
               <div class="d-flex justify-content-start align-items-center" style="height: 200px;">
                  <p>Status Equip:</p>
               </div>
            </div>
			<div class="col-1">
			
			</div>
            <div class="col-8 border rounded">
               <div class="d-flex justify-content-start align-items-center" style="height: 200px;">
                  <p>Mensagem:</p>
               </div>
            </div>
         </div>
		 
		 

		 
		 
		 
		 
		 
		 
		 
      </div class="container">

      <div>
         <a class="bt btn btn-primary" href="/germana/graph" role="button">Graficos</a>


      </div>


      <script>
         const form = document.getElementById('my-form');
         const dataInicialInput = document.getElementById('data-inicial');
         const dataFinalInput = document.getElementById('data-final');
         // Obtém a URL atual
         const currentUrl = window.location;
         const btMachine = document.querySelectorAll(".bt");
         switch(currentUrl.pathname) {
             case '/1':
             btMachine[0].classList.add('bt-selected');
             break;
             case '/2':
             btMachine[1].classList.add('bt-selected');
             break;
             case '/3':
             btMachine[2].classList.add('bt-selected');
             break;
             default:
         }
         // Atualiza o conteúdo da tag <span> com a URL atual
         form.action = currentUrl.href;
         // Define os valores nos campos de data com base nos parâmetros da URL
         const params = new URLSearchParams(window.location.search);
         const dataInicial = params.get('data_inicial') || '';
         const dataFinal = params.get('data_final') || '';
         dataInicialInput.value = dataInicial;
         dataFinalInput.value = dataFinal;
         // Redireciona para a nova página mantendo os valores das datas selecionadas
         const buttons = document.querySelectorAll(".bt");
         buttons.forEach(button => {
             button.addEventListener('click', event => {
                 event.preventDefault();
                 const newUrl = button.getAttribute('href') + `?data_inicial=${dataInicial}&data_final=${dataFinal}`;
                 window.location.href = newUrl;
                 //console.log(newUrl)
             });
         });
         const limparFiltrosButton = document.getElementById('limpar-filtros');
         // Função para limpar os campos de datas e redirecionar para a página sem filtros
         limparFiltrosButton.addEventListener('click', () => {
             dataInicialInput.value = '';
             dataFinalInput.value = '';
             const newUrl = new URL(currentUrl);
             newUrl.searchParams.delete('data_inicial');
             newUrl.searchParams.delete('data_final');
             window.location.href = newUrl.toString();
         });
      </script>
      <div class="container border" style="margin-bottom: 20px; margin-top: 20px";>
         <div class="row">
            <div class="col">
               <table class="table table-striped table-hover table">
                  <thead>
                     <tr>
                        <% for (const key in eventsToShow[0]) { %>
                        <th><%= key %></th>
                        <% } %>
                     </tr>
                  </thead>
                  <tbody>
                     <% for (const event of eventsToShow) { %>
                     <tr>
                        <% for (const key in event) { %>
                        <td><%= event[key] %></td>
                        <% } %>
                     </tr>
                     <% } %>
                  </tbody>
               </table>
               <div class="position-relative" style="padding-top: 90px">
                  <nav class= "position-absolute top-50 start-50 translate-middle" aria-label="Page navigation">
                     <ul class="pagination justify-content-center">
                        <!-- Botão para ir para a página anterior -->
                        <li class="page-item <% if (currentPage === 1) { %>disabled<% } %>">
                           <a class="page-link" href="?data_inicial=<%= data_inicial  %>&data_final=<%= data_final  %>&page=<%= currentPage - 1 %>" aria-label="Previous">
                           <span aria-hidden="true">&laquo;</span>
                           </a>
                        </li>
                        <!-- Botões para as páginas anteriores -->
                        <% for (let page = Math.max(currentPage - 3, 1); page < currentPage; page++) { %>
                        <li class="page-item">
                           <a class="page-link" href="?data_inicial=<%= data_inicial  %>&data_final=<%= data_final  %>&page=<%= page %>"><%= page %></a>
                        </li>
                        <% } %>
                        <!-- Botão para a página atual -->
                        <li class="page-item active">
                           <a class="page-link" href="#"><%= currentPage %></a>
                        </li>
                        <!-- Botões para as páginas posteriores -->
                        <% for (let page = currentPage + 1; page <= Math.min(currentPage + 3, totalPages); page++) { %>
                        <li class="page-item">
                           <a class="page-link" href="?data_inicial=<%= data_inicial  %>&data_final=<%= data_final  %>&page=<%= page %>"><%= page %></a>
                        </li>
                        <% } %>
                        <!-- Botão para ir para a próxima página -->
                        <li class="page-item <% if (currentPage === totalPages) { %>disabled<% } %>">
                           <a class="page-link" href="?data_inicial=<%= data_inicial  %>&data_final=<%= data_final  %>&page=<%= currentPage + 1 %>" aria-label="Next">
                           <span aria-hidden="true">&raquo;</span>
                           </a>
                        </li>
                     </ul>
                  </nav>
                  <div class="position-absolute top-50 start-100 translate-middle" style="width: 360px">
                     <p>Total de Registros: <%= totalEvents %></p>
                  </div>
               </div>
            </div>
         </div>
      </div>
            <!-- Botão de Impressão da Tabela -->
      <div class="container text-center mt-4">
         <button class="btn btn-secondary" onclick="printJsonTable(result1) ">Imprimir Tabela</button>
         <button class="btn btn-secondary ms-2" onclick="exportJsonToCSV(result1)">Exportar para CSV</button>
      </div>
      
      <div class="container border" style="margin-bottom: 20px; margin-top: 20px";>
         <h2> Totais Diários</h2>
         <div class="container" id="columnchart_material" style="height: 500px;"></div>
         <table class="table table-striped table-hover table">
            <thead>
               <tr>
                  <td>Data</td>
                  <td>Brita</td>
                  <td>Cimento</td>
                  <td>Areia Ind.</td>
                  <td>Areia Rio</td>
                  <td>Granilha</td>
               </tr>
            </thead>
            <tbody>
               <% for (const sum of summary) { %>
               <tr>
                  <td><%= sum["Data"] %></td>
                  <td><%= sum["Brita"] %></td>
                  <td><%= sum["Cimento"] %></td>
                  <td><%= sum["Areia Ind."] %></td>
                  <td><%= sum["Areia Rio"] %></td>
                  <td><%= sum["Granilha"] %></td>
               </tr>
               <% } %>
            </tbody>
         </table>
      </div>
	  
	  

	  
	  
      <script>
         function printTable() {
               const table = document.querySelector(".table");
               const newWindow = window.open('', '_blank');
               newWindow.document.write('<html><head><title>Tabela para Impressão</title>');
               newWindow.document.write('<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">');
               newWindow.document.write('</head><body>');
               newWindow.document.write(table.outerHTML);
               newWindow.document.write('</body></html>');
               newWindow.document.close();
               newWindow.print();
            }



function printJsonTable(jsonData) {
    // Crie uma tabela HTML vazia
    const table = document.createElement("table");
    table.classList.add("table"); // Adicione a classe "table" para estilização opcional

    // Crie o cabeçalho da tabela usando as chaves do primeiro objeto JSON
    const thead = document.createElement("thead");
    const headerRow = document.createElement("tr");
    for (const key in jsonData[0]) {
        const th = document.createElement("th");
        th.textContent = key;
        headerRow.appendChild(th);
    }
    thead.appendChild(headerRow);
    table.appendChild(thead);

    // Crie as linhas da tabela com os dados JSON
    const tbody = document.createElement("tbody");
    jsonData.forEach((data) => {
        const row = document.createElement("tr");
        for (const key in data) {
            const cell = document.createElement("td");
            cell.textContent = data[key];
            row.appendChild(cell);
        }
        tbody.appendChild(row);
    });
    table.appendChild(tbody);

    // Crie uma nova janela para exibir a tabela
    const newWindow = window.open('', '_blank');
    newWindow.document.write('<html><head><title>Tabela de Dados</title>');
    newWindow.document.write('<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">');
    newWindow.document.write('<style>@media print { .print-header { display: block; } }</style>'); // Estilo para exibir o cabeçalho apenas na impressão
    newWindow.document.write('</head><body>');

    // Cabeçalho padrão para todas as páginas impressas
    newWindow.document.write('<div class="print-header">');
    newWindow.document.write('<h1>Germana App</h1>');
    newWindow.document.write('<p>*********************************************************</p>');
    newWindow.document.write('</div>');

    newWindow.document.write(table.outerHTML);
    newWindow.document.write('</body></html>');
    newWindow.document.close();
    newWindow.print();
}



function exportJsonToCSV(jsonData) {
    // Verifique se há dados JSON
    if (!jsonData || jsonData.length === 0) {
        console.error("Nenhum dado JSON fornecido para exportação.");
        return;
    }

    // Gere o cabeçalho CSV usando as chaves do primeiro objeto JSON
    const header = Object.keys(jsonData[0]);

    // Gere o conteúdo CSV
    const csvContent = [
        header.join(","),
        ...jsonData.map((row) => header.map((fieldName) => row[fieldName]).join(","))
    ].join("\n");

    // Crie um objeto Blob com o conteúdo CSV
    const blob = new Blob([csvContent], { type: "text/csv" });

    // Crie um nome de arquivo com o dia e hora atuais
    const now = new Date();
    const fileName = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}_${now.getHours().toString().padStart(2, '0')}-${now.getMinutes().toString().padStart(2, '0')}-${now.getSeconds().toString().padStart(2, '0')}.csv`;

    // Crie uma URL para o Blob
    const url = URL.createObjectURL(blob);

    // Crie um elemento <a> para iniciar o download
    const a = document.createElement("a");
    a.href = url;
    a.download = fileName; // Nome do arquivo CSV

    // Dispare o clique no elemento <a> para iniciar o download
    a.click();

    // Limpe a URL do Blob após o download
    URL.revokeObjectURL(url);
}








         function exportToCSV() {
            const table = document.querySelector(".table");
            const rows = Array.from(table.querySelectorAll("tr"));
            const csvContent = rows.map(row => {
               const cells = Array.from(row.querySelectorAll("td, th"));
               return cells.map(cell => cell.textContent).join(",");
            }).join("\n");
            const blob = new Blob([csvContent], { type: "text/csv" });
            const url = URL.createObjectURL(blob);  
            const a = document.createElement("a");
            a.href = url;
            a.download = "tabela.csv";
            a.style.display = "none";
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
         }
      </script>
   </body>
</html>